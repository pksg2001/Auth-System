{"version":3,"sources":["containers/Home.js","actions/auth.js","actions/types.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","components/Navbar.js","hocs/Layout.js","reducers/auth.js","reducers/index.js","store.js","App.js","index.js"],"names":["Home","react_default","a","createElement","className","class","react_router_dom","to","role","load_user","_ref2","Object","asyncToGenerator","_regeneratorRuntime","mark","_callee2","dispatch","config","res","wrap","_context2","prev","next","localStorage","getItem","headers","Content-Type","Authorization","concat","Accept","axios","get","process","sent","type","payload","data","t0","stop","_x2","apply","this","arguments","connect","state","isAuthenticated","auth","login","email","password","_ref3","_callee3","body","_context3","JSON","stringify","post","_x3","_ref","_useState","useState","_useState2","slicedToArray","formData","setFormData","onChange","e","objectSpread","defineProperty","target","name","value","react_router","onSubmit","preventDefault","placeholder","required","minLength","signup","re_password","_ref4","_callee4","_context4","_x4","accountCreated","setAccountCreated","_useState3","_useState4","verify","uid","token","_ref5","_callee5","_context5","_x5","match","verified","setVerified","style","marginTop","onClick","params","reset_password","_ref6","_callee6","_context6","_x6","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","_ref7","_callee7","_context7","_x7","param","logout","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","href","react","checkAuthenticated","_callee","_context","code","_x","props","useEffect","components_Navbar","children","initialState","access","refresh","user","combineReducers","length","undefined","action","setItem","removeItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","es","hocs_Layout","exact","path","component","Login","Signup","ResetPassword","ResetPasswordConfirm","Activate","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.fb9531ac.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Home = () => (\r\n    <div className='container'>\r\n        <div class=\"jumbotron mt-5\">\r\n            <h1 class=\"display-4\">Welcome to Auth System!</h1>\r\n            <p class=\"lead\">This is an incredible auth system with production level features.</p>\r\n            <hr class=\"my-4\" />\r\n            <p>Click the login button!</p>\r\n            <Link class=\"btn btn-primary btn-lg\" to=\"/login\" role=\"button\">Login</Link>\r\n            </div>\r\n    </div>\r\n);\r\n\r\nexport default Home;","import axios from 'axios';\r\n//import res from 'express/lib/response';\r\nimport {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    LOGOUT\r\n} from './types';\r\n\r\nexport const checkAuthenticated = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Accept': 'application/json',\r\n                'Authorization': 'Bearer{access}'\r\n            } \r\n        };\r\n\r\n        const body = JSON.stringify({ token: localStorage.getItem('access')});\r\n\r\n        try {\r\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config)\r\n\r\n            if (res.data.code !== 'token_not_valid') {\r\n                dispatch({\r\n                    type: AUTHENTICATED_SUCCESS\r\n                });\r\n            } else {\r\n                dispatch({\r\n                    type: AUTHENTICATED_FAIL\r\n                });\r\n            }\r\n        } catch (err) {\r\n            dispatch({\r\n                type: AUTHENTICATED_FAIL\r\n            });\r\n        }\r\n\r\n    } else {\r\n        dispatch({\r\n            type: AUTHENTICATED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const load_user = () => async dispatch => {\r\n    if (localStorage.getItem('access')) {\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': `Bearer ${localStorage.getItem('access')}`,\r\n                'Accept': 'application/json'\r\n            }\r\n        };\r\n\r\n        try {\r\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\r\n    \r\n            dispatch({\r\n                type: USER_LOADED_SUCCESS,\r\n                payload: res.data\r\n            });\r\n        } catch(err) {\r\n            dispatch({\r\n                type: USER_LOADED_FAIL\r\n            });\r\n        }\r\n    } else {\r\n        dispatch({\r\n            type: USER_LOADED_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const login = (email, password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'Bearer{access}'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email, password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\r\n\r\n        dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: res.data\r\n        });\r\n\r\n        dispatch(load_user());\r\n    } catch(err) {\r\n        dispatch({\r\n            type: LOGIN_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const signup = (name, email, password, re_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ name, email, password, re_password });\r\n\r\n    try {\r\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\r\n\r\n        dispatch({\r\n            type: SIGNUP_SUCCESS,\r\n            payload: res.data\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: SIGNUP_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const verify = (uid, token) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\r\n\r\n        dispatch({\r\n            type: ACTIVATION_SUCCESS,\r\n        });\r\n    } catch(err) {\r\n        dispatch({\r\n            type: ACTIVATION_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password = (email) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n            \r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ email });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    };\r\n\r\n    const body = JSON.stringify({ uid, token, new_password, re_new_password });\r\n\r\n    try {\r\n        await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm`, body, config);\r\n\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_SUCCESS\r\n        });\r\n    } catch (err) {\r\n        dispatch({\r\n            type: PASSWORD_RESET_CONFIRM_FAIL\r\n        });\r\n    }\r\n};\r\n\r\nexport const logout = () => dispatch => {\r\n    dispatch({\r\n        type: LOGOUT\r\n    });\r\n};","export const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\r\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\r\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\r\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\r\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\r\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\r\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\r\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\r\nexport const PASSWORD_RESET_FAIL = 'PASSWORD_RESET_FAIL';\r\nexport const PASSWORD_RESET_SUCCESS = 'PASSWORD_RESET_SUCCESS';\r\nexport const PASSWORD_RESET_CONFIRM_FAIL = 'PASSWORD_RESET_CONFIRM_FAIL';\r\nexport const PASSWORD_RESET_CONFIRM_SUCCESS = 'PASSWORD_RESET_CONFIRM_SUCCESS';\r\nexport const LOGOUT = 'LOGOUT'","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../actions/auth';\r\n\r\n\r\nconst Login = ({ login, isAuthenticated }) => {\r\n    const [formData, setFormData] = useState({\r\n        email: '',\r\n        password: ''\r\n    });\r\n\r\n    const { email, password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        login(email, password);\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect to Homepage\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n           <h1>Sign In</h1>\r\n            <p>Sign into your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    /> \r\n                </div>  \r\n                <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Password'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Login</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\r\n            </p>\r\n            <p className='mt-3'>\r\n                Forgot your Password? <Link to='/reset-password'>Reset Password</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStatetoProps, { login })(Login);","import React, { useState } from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { signup } from '../actions/auth';\r\n\r\n\r\nconst Signup = ({ signup, isAuthenticated }) => {\r\n    const [accountCreated, setAccountCreated] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        name:'',\r\n        email: '',\r\n        password: '',\r\n        re_password: ''\r\n    });\r\n\r\n    const { name, email, password, re_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (password === re_password) {\r\n            signup(name, email, password, re_password);\r\n            setAccountCreated(true);\r\n        }  \r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect to Homepage\r\n    if (isAuthenticated) {\r\n        return <Redirect to='/' /> \r\n    }\r\n    if (accountCreated) {\r\n        return <Redirect to='/login' /> \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n           <h1>Sign Up</h1>\r\n            <p>Create your Account</p>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='text'\r\n                        placeholder='Name*'\r\n                        name='name'\r\n                        value={name}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    /> \r\n                </div> \r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email*'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    /> \r\n                </div>  \r\n                <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Password*'\r\n                            name='password'\r\n                            value={password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                    />\r\n                </div>\r\n                <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Confirm Password*'\r\n                            name='re_password'\r\n                            value={re_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Register</button>\r\n            </form>\r\n            <p className='mt-3'>\r\n                Already a User? <Link to='/login'>Sign In</Link>\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\nconst mapStatetoProps = state => ({\r\n   isAuthenticated: state.auth.isAuthenticated\r\n});\r\n\r\nexport default connect(mapStatetoProps, { signup })(Signup);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { verify } from '../actions/auth';\r\n\r\n\r\nconst Activate = ({ verify, match }) => {\r\n\r\n    const [verified, setVerified] = useState(false);\r\n\r\n    const verify_account = e => {\r\n        const uid = match.params.uid;\r\n        const token = match.params.token;\r\n\r\n\r\n        verify(uid, token);\r\n        setVerified(true);\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect to Homepage\r\n    if (verified) {\r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n          <div\r\n          className='d-flex flex-column justify-content-center align-items-center'\r\n          style={{ marginTop: '200px' }}\r\n        >\r\n        <h1>Verify Your Account:</h1>\r\n        <button\r\n            onClick={verify_account}\r\n            style={{ marginTop: '50px' }}\r\n            type='button'\r\n            className='btn btn-primary'\r\n        >\r\n            Verify\r\n        </button>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, { verify })(Activate);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password } from '../actions/auth';\r\n\r\n\r\nconst ResetPassword = ({ reset_password }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        email: ''\r\n    });\r\n\r\n    const { email } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        reset_password(email);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect to Homepage\r\n    if (requestSent) {\r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n           <h1>Request Password Reset</h1>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n                <div className='form-group'>\r\n                    <input\r\n                        className='form-control'\r\n                        type='email'\r\n                        placeholder='Email'\r\n                        name='email'\r\n                        value={email}\r\n                        onChange={e => onChange(e)}\r\n                        required\r\n                    /> \r\n                </div>  \r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password })(ResetPassword);","import React, { useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport { reset_password_confirm } from '../actions/auth';\r\n\r\n\r\nconst ResetPasswordConfirm = ({ match, reset_password_confirm }) => {\r\n    const [requestSent, setRequestSent] = useState(false);\r\n    const [formData, setFormData] = useState({\r\n        new_password: '',\r\n        re_new_password: ''\r\n    });\r\n\r\n    const { new_password, re_new_password } = formData;\r\n\r\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\r\n\r\n    const onSubmit = e => {\r\n        e.preventDefault();\r\n\r\n    const uid = match.param.uid;\r\n    const token = match.param.token;\r\n\r\n        reset_password_confirm(uid, token, new_password, re_new_password);\r\n        setRequestSent(true);\r\n    };\r\n\r\n    // Is the user authenticated?\r\n    // Redirect to Homepage\r\n    if (requestSent) {\r\n        return <Redirect to='/' /> \r\n    }\r\n\r\n    return (\r\n        <div className='container mt-5'>\r\n            <form onSubmit={e => onSubmit(e)}>\r\n            <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='New Password'\r\n                            name='new_password'\r\n                            value={new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                    />\r\n                </div> \r\n                <div className='form-group'>\r\n                        <input\r\n                            className='form-control'\r\n                            type='password'\r\n                            placeholder='Confirm New Password'\r\n                            name='re_new_password'\r\n                            value={re_new_password}\r\n                            onChange={e => onChange(e)}\r\n                            minLength='6'\r\n                            required\r\n                    />\r\n                </div>\r\n                <button className='btn btn-primary' type='submit'>Reset Password</button>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default connect(null, { reset_password_confirm })(ResetPasswordConfirm);","import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport { logout } from '../actions/auth';\r\n\r\nconst Navbar = ({ logout, isAuthenticated }) => {\r\n    const guestLinks = () => (\r\n        <Fragment>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/login\">Login</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/signup\">Sign Up</Link>\r\n            </li>\r\n        </Fragment>\r\n    );\r\n\r\n    const authLinks = () => (\r\n        <li className=\"nav-item\">\r\n                <a className=\"nav-link\" href=\"#\" onClick={logout}>Logout</a> \r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n            <Link className=\"navbar-brand\" to=\"/\">Auth System</Link>\r\n            <button \r\n                className=\"navbar-toggler\" \r\n                type=\"button\" \r\n                data-toggle=\"collapse\" \r\n                data-target=\"#navbarNav\" \r\n                aria-controls=\"navbarNav\" \r\n                aria-expanded=\"false\" \r\n                aria-label=\"Toggle navigation\"\r\n            >\r\n                <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                <ul className=\"navbar-nav\">\r\n                    <li className=\"nav-item active\">\r\n                        <Link className=\"nav-link\" to=\"/\">Home <span class=\"sr-only\">(current)</span></Link>\r\n                    </li>\r\n                    {isAuthenticated ? authLinks() : guestLinks()}\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nconst MapStateToProps = state => ({\r\n    isAuthenticated: state.auth.isAuthenticated\r\n});\r\nexport default connect(MapStateToProps, { logout })(Navbar);","import React, { useEffect } from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport { connect } from 'react-redux';\r\nimport { checkAuthenticated, load_user } from '../actions/auth';\r\n\r\nconst Layout = (props) => {\r\n    useEffect(() => {\r\n        props.checkAuthenticated();\r\n        props.load_user();\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <Navbar />\r\n                {props.children}\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default connect(null, { checkAuthenticated, load_user })(Layout);","import {\r\n    LOGIN_SUCCESS,\r\n    LOGIN_FAIL,\r\n    USER_LOADED_SUCCESS,\r\n    USER_LOADED_FAIL,\r\n    AUTHENTICATED_FAIL,\r\n    AUTHENTICATED_SUCCESS,\r\n    PASSWORD_RESET_FAIL,\r\n    PASSWORD_RESET_SUCCESS,\r\n    PASSWORD_RESET_CONFIRM_FAIL,\r\n    PASSWORD_RESET_CONFIRM_SUCCESS,\r\n    SIGNUP_SUCCESS,\r\n    SIGNUP_FAIL,\r\n    ACTIVATION_FAIL,\r\n    ACTIVATION_SUCCESS,\r\n    LOGOUT\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n    access: localStorage.getItem('access'),\r\n    refresh: localStorage.getItem('refresh'),\r\n    isAuthenticated: null,\r\n    user: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    const { type, payload } = action;\r\n\r\n    switch(type) {\r\n        case AUTHENTICATED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true\r\n            }\r\n        case LOGIN_SUCCESS:\r\n            localStorage.setItem('access', payload.access);\r\n            return {\r\n                ...state,\r\n                isAuthenticated: true,\r\n                access: payload.access,\r\n                refresh: payload.refresh\r\n            }\r\n        case SIGNUP_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: payload\r\n            }\r\n        case AUTHENTICATED_FAIL:\r\n            return {\r\n                ...state,\r\n                isAuthenticated: false\r\n            }\r\n        case USER_LOADED_FAIL:\r\n            return {\r\n                ...state,\r\n                user: null\r\n            }\r\n        case LOGIN_FAIL:\r\n        case LOGOUT:\r\n        case SIGNUP_FAIL:\r\n            localStorage.removeItem('access');\r\n            localStorage.removeItem('refresh');\r\n            return {\r\n                ...state,\r\n                access: null,\r\n                refresh: null,\r\n                isAuthenticated: false,\r\n                user: null\r\n            }\r\n        case PASSWORD_RESET_FAIL:\r\n        case PASSWORD_RESET_SUCCESS:\r\n        case PASSWORD_RESET_CONFIRM_FAIL:\r\n        case PASSWORD_RESET_CONFIRM_SUCCESS:\r\n        case ACTIVATION_SUCCESS:\r\n        case ACTIVATION_FAIL:\r\n            return {\r\n                ...state\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport auth from './auth';\r\n\r\nexport default combineReducers({\r\n    auth\r\n});","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\n\r\nimport Home from './containers/Home';\r\nimport Login from './containers/Login';\r\nimport Signup from './containers/Signup';\r\nimport Activate from './containers/Activate';\r\nimport ResetPassword from './containers/ResetPassword';\r\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\r\nimport Layout from './hocs/Layout';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport store from './store';\r\n\r\nconst App = () => (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <Layout>\r\n                <Switch>\r\n                    <Route exact path='/' component={Home} />\r\n                    <Route exact path='/login' component={Login} />\r\n                    <Route exact path='/signup' component={Signup} />\r\n                    <Route exact path='/reset-password' component={ResetPassword} />\r\n                    <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\r\n                    <Route exact path='/activate/:uid/:token' component={Activate} />\r\n                </Switch>\r\n            </Layout>\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}